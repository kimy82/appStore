function Migrator(t,e){this.db=e,this.dbname=t.adapter.db_name,this.table=t.adapter.collection_name,this.idAttribute=t.adapter.idAttribute,this.column=function(t){var e=t.split(/\s+/),i=e[0];switch(i.toLowerCase()){case"string":case"varchar":case"date":case"datetime":Ti.API.warn('"'+i+'" is not a valid sqlite field, using TEXT instead');case"text":i="TEXT";break;case"int":case"tinyint":case"smallint":case"bigint":case"boolean":Ti.API.warn('"'+i+'" is not a valid sqlite field, using INTEGER instead');case"integer":i="INTEGER";break;case"double":case"float":case"decimal":case"number":Ti.API.warn('"'+t+'" is not a valid sqlite field, using REAL instead');case"real":i="REAL";break;case"blob":i="BLOB";break;case"null":i="NULL";break;default:i="TEXT"}return e[0]=i,e.join(" ")},this.createTable=function(t){var e=[],i=!1;for(var r in t.columns)r===this.idAttribute&&(i=!0),e.push(r+" "+this.column(t.columns[r]));i||this.idAttribute!==ALLOY_ID_DEFAULT||e.push(ALLOY_ID_DEFAULT+" TEXT UNIQUE");var n="CREATE TABLE IF NOT EXISTS "+this.table+" ( "+e.join(",")+")";this.db.execute(n)},this.dropTable=function(){this.db.execute("DROP TABLE IF EXISTS "+this.table)},this.insertRow=function(t){var e=[],i=[],r=[],n=!1;for(var s in t)s===this.idAttribute&&(n=!0),e.push(s),i.push(t[s]),r.push("?");n||this.idAttribute!==ALLOY_ID_DEFAULT||(e.push(this.idAttribute),i.push(util.guid()),r.push("?")),this.db.execute("INSERT INTO "+this.table+" ("+e.join(",")+") VALUES ("+r.join(",")+");",i)},this.deleteRow=function(t){var e="DELETE FROM "+this.table,i=_.keys(t),r=i.length,n=[],s=[];r&&(e+=" WHERE ");for(var a=0;r>a;a++)n.push(i[a]+" = ?"),s.push(t[i[a]]);e+=n.join(" AND "),this.db.execute(e,s)}}function Sync(t,e,i){var r,n=e.config.adapter.collection_name,s=e.config.columns,a=e.config.adapter.db_name||ALLOY_DB_DEFAULT,o=null;switch(t){case"create":case"update":o=function(){var t={};e.id||(e.id=e.idAttribute===ALLOY_ID_DEFAULT?util.guid():null,t[e.idAttribute]=e.id,e.set(t,{silent:!0}));var i=[],o=[],l=[];for(var c in s)i.push(c),o.push(e.get(c)),l.push("?");var u="REPLACE INTO "+n+" ("+i.join(",")+") VALUES ("+l.join(",")+");";if(r=Ti.Database.open(a),r.execute("BEGIN;"),r.execute(u,o),null===e.id){var h="SELECT last_insert_rowid();",d=r.execute(h);d&&d.isValidRow()?(e.id=d.field(0),t[e.idAttribute]=e.id,e.set(t,{silent:!0})):Ti.API.warn("Unable to get ID from database for model: "+e.toJSON()),d&&d.close()}return r.execute("COMMIT;"),r.close(),e.toJSON()}();break;case"read":var l=i.query||"SELECT * FROM "+n;r=Ti.Database.open(a);var c;c=_.isString(l)?r.execute(l):r.execute(l.statement,l.params);for(var u=0,h=[];c.isValidRow();){var d={},p=0;p=_.isFunction(c.fieldCount)?c.fieldCount():c.fieldCount,_.times(p,function(t){var e=c.fieldName(t);d[e]=c.fieldByName(e)}),h.push(d),u++,c.next()}c.close(),r.close(),e.length=u,o=1===u?h[0]:h;break;case"delete":var l="DELETE FROM "+n+" WHERE "+e.idAttribute+"=?";r=Ti.Database.open(a),r.execute(l,e.id),r.close(),e.id=null,o=e.toJSON()}o?(_.isFunction(i.success)&&i.success(o),"read"===t&&e.trigger("fetch")):_.isFunction(i.error)&&i.error(o)}function GetMigrationFor(t,e){var i=null,r=Ti.Database.open(t);r.execute("CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT);");var n=r.execute("SELECT latest FROM migrations where model = ?;",e);if(n.isValidRow())var i=n.field(0)+"";return n.close(),r.close(),i}function Migrate(t){var e=t.migrations||[],i={};e.length&&e[e.length-1](i);var r=t.prototype.config;r.adapter.db_name||(r.adapter.db_name=ALLOY_DB_DEFAULT);var n=new Migrator(r),s=r.adapter.migration===void 0||null===r.adapter.migration?i.id:r.adapter.migration;if(s===void 0||null===s){var a=Ti.Database.open(r.adapter.db_name);return n.db=a,n.createTable(r),a.close(),void 0}s+="";var o,l=GetMigrationFor(r.adapter.db_name,r.adapter.collection_name);if(l!==s){if(l&&l>s?(o=0,e.reverse()):o=1,db=Ti.Database.open(r.adapter.db_name),n.db=db,db.execute("BEGIN;"),e.length)for(var c=0;e.length>c;c++){var u=e[c],h={};if(u(h),o){if(h.id>s)break;if(l>=h.id)continue}else{if(s>=h.id)break;if(h.id>l)continue}var d=o?"up":"down";_.isFunction(h[d])&&h[d](n)}else n.createTable(r);db.execute("DELETE FROM migrations where model = ?",r.adapter.collection_name),db.execute("INSERT INTO migrations VALUES (?,?)",s,r.adapter.collection_name),db.execute("COMMIT;"),db.close(),n.db=null}}function installDatabase(t){var e=t.adapter.db_file,i=t.adapter.collection_name,r=/(^|.*\/)([^\/]+)\.[^\/]+$/,n=e.match(r);if(null===n)throw'Invalid sql database filename "'+e+'"';t.adapter.db_name=t.adapter.db_name||n[2];var s=t.adapter.db_name;Ti.API.debug('Installing sql database "'+e+'" with name "'+s+'"');for(var a=Ti.Database.install(e,s),o=a.execute('pragma table_info("'+i+'");'),l={};o.isValidRow();){var c=o.fieldByName("name"),u=o.fieldByName("type");l[c]=u,c!==ALLOY_ID_DEFAULT||t.adapter.idAttribute||(t.adapter.idAttribute=ALLOY_ID_DEFAULT),o.next()}if(t.columns=l,o.close(),t.adapter.idAttribute){if(!_.contains(_.keys(t.columns),t.adapter.idAttribute))throw'config.adapter.idAttribute "'+t.adapter.idAttribute+'" not found in list of columns for table "'+i+'"\n'+"columns: ["+_.keys(t.columns).join(",")+"]"}else{Ti.API.info('No config.adapter.idAttribute specified for table "'+i+'"'),Ti.API.info('Adding "'+ALLOY_ID_DEFAULT+'" to uniquely identify rows');var h=[],d=[];_.each(t.columns,function(t,e){d.push(e),h.push(e+" "+t)});var p=d.join(",");a.execute("ALTER TABLE "+i+" RENAME TO "+i+"_temp;"),a.execute("CREATE TABLE "+i+"("+h.join(",")+","+ALLOY_ID_DEFAULT+" TEXT UNIQUE);"),a.execute("INSERT INTO "+i+"("+p+","+ALLOY_ID_DEFAULT+") SELECT "+p+",CAST(_ROWID_ AS TEXT) FROM "+i+"_temp;"),a.execute("DROP TABLE "+i+"_temp;"),t.columns[ALLOY_ID_DEFAULT]="TEXT UNIQUE",t.adapter.idAttribute=ALLOY_ID_DEFAULT}a.close()}var _=require("alloy/underscore")._,util=require("alloy/sync/util"),ALLOY_DB_DEFAULT="_alloy_",ALLOY_ID_DEFAULT="alloy_id",cache={config:{},Model:{}};module.exports.beforeModelCreate=function(t,e){if(cache.config[e])return cache.config[e];throw"No support for Titanium.Database in MobileWeb environment."},module.exports.afterModelCreate=function(t,e){return cache.Model[e]?cache.Model[e]:(t||(t={}),t.prototype.idAttribute=t.prototype.config.adapter.idAttribute,Migrate(t),cache.Model[e]=t,t)},module.exports.sync=Sync;